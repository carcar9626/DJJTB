#!/usr/bin/env python3
import sys
import os
import webbrowser
import urllib.parse
import argparse

def is_image_file(file_path):
    """Check if file is an image based on extension"""
    valid_extensions = {'.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.tiff', '.tif'}
    return os.path.splitext(file_path.lower())[1] in valid_extensions

def reverse_image_search(file_path):
    """Perform reverse image search on the given file"""
    # Resolve to absolute path
    file_path = os.path.abspath(file_path)
    
    if not os.path.exists(file_path):
        print(f"‚ùå Error: File not found: {file_path}")
        return False
    
    if not is_image_file(file_path):
        print(f"‚ùå Error: Not a valid image file: {file_path}")
        return False
    
    try:
        # Convert file path to file:// URL for Google Images
        file_url = f"file://{urllib.parse.quote(file_path)}"
        
        # Open Google reverse image search
        search_url = f"https://www.google.com/searchbyimage?image_url={urllib.parse.quote(file_url)}"
        webbrowser.open(search_url)
        
        print(f"‚úÖ Opened reverse image search for: {os.path.basename(file_path)}")
        return True
        
    except Exception as e:
        print(f"‚ùå Error occurred: {str(e)}")
        return False

def interactive_mode():
    """Interactive mode for pasting file paths"""
    print("üîç Reverse Image Search Tool")
    print("=" * 40)
    
    while True:
        print("\nOptions:")
        print("1. Enter/paste file path")
        print("2. Quit")
        
        choice = input("\nChoose option (1-2): ").strip()
        
        if choice == '1':
            file_path = input("\nüìÅ Enter image file path: ").strip().strip('"\'')
            if file_path:
                reverse_image_search(file_path)
            else:
                print("‚ùå No file path entered")
                
        elif choice == '2':
            print("üëã Goodbye!")
            break
        else:
            print("‚ùå Invalid choice. Please enter 1 or 2.")

def main():
    parser = argparse.ArgumentParser(description='Reverse Image Search Tool')
    parser.add_argument('file_path', nargs='?', help='Path to image file')
    parser.add_argument('-i', '--interactive', action='store_true',
                       help='Run in interactive mode')
    
    args = parser.parse_args()
    
    if args.interactive:
        interactive_mode()
    elif args.file_path:
        reverse_image_search(args.file_path)
    else:
        # No arguments provided, show usage
        print("üîç Reverse Image Search Tool")
        print("=" * 40)
        print("\nUsage:")
        print(f"  python {os.path.basename(__file__)} <image_file_path>")
        print(f"  python {os.path.basename(__file__)} -i  # Interactive mode")
        print("\nExamples:")
        print(f"  python {os.path.basename(__file__)} /path/to/image.jpg")
        print(f"  python {os.path.basename(__file__)} --interactive")
        
        # Ask if user wants interactive mode
        response = input("\nStart interactive mode? (y/n): ").strip().lower()
        if response in ['y', 'yes']:
            interactive_mode()

if __name__ == "__main__":
    main()